apiVersion: v1
kind: Template
metadata:
  name: ocdemo
  annotations:
    description: "OC Demo"
    tags: "java,maria"
objects:
  - apiVersion: v1
    kind: Secret
    metadata:
      labels:
        app: ${DATABASE_SERVICE_NAME}
      name: ${DATABASE_SERVICE_NAME}
      app: ${DATABASE_SERVICE_NAME}
    stringData:
      database-host: ${DATABASE_SERVICE_NAME}
      database-name: ${MYSQL_DATABASE}
      database-password: ${MYSQL_PASSWORD}
      database-root-password: ${MYSQL_ROOT_PASSWORD}
      database-user: ${MYSQL_USER}
  - apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: ${DATABASE_SERVICE_NAME}
      name: ${DATABASE_SERVICE_NAME}
    spec:
      selector:
        name: ${DATABASE_SERVICE_NAME}
        app: ${DATABASE_SERVICE_NAME}
      ports:
        - name: mariadb
          port: 3306
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      labels:
        app: ${DATABASE_SERVICE_NAME}
      name: ${DATABASE_SERVICE_NAME}
    spec:
      selector:
        name: ${DATABASE_SERVICE_NAME}
        app: ${DATABASE_SERVICE_NAME}
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: ${VOLUME_CAPACITY}
  - apiVersion: v1
    kind: DeploymentConfig
    metadata:
      labels:
        app: ${DATABASE_SERVICE_NAME}
        deploymentconfig: ${DATABASE_SERVICE_NAME}
      name: ${DATABASE_SERVICE_NAME}
    spec:
      replicas: 1
      selector:
        name: ${DATABASE_SERVICE_NAME}
        app: ${DATABASE_SERVICE_NAME}
      strategy:
        type: Recreate
      template:
        metadata:
          labels:
            name: ${DATABASE_SERVICE_NAME}
            app: ${DATABASE_SERVICE_NAME}
        spec:
          containers:
            - env:
                - name: MYSQL_USER
                  valueFrom:
                    secretKeyRef:
                      name: ${DATABASE_SERVICE_NAME}
                      key: database-user
                - name: MYSQL_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: ${DATABASE_SERVICE_NAME}
                      key: database-password
                - name: MYSQL_ROOT_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: ${DATABASE_SERVICE_NAME}
                      key: database-root-password
                - name: MYSQL_DATABASE
                  valueFrom:
                    secretKeyRef:
                      name: ${DATABASE_SERVICE_NAME}
                      key: database-name
              image: ' '
              imagePullPolicy: IfNotPresent
              livenessProbe:
                initialDelaySeconds: 30
                tcpSocket:
                  port: 3306
                timeoutSeconds: 1
              name: mariadb
              ports:
                - containerPort: 3306
              readinessProbe:
                exec:
                  command:
                    - /bin/sh
                    - -i
                    - -c
                    - MYSQL_PWD="$MYSQL_PASSWORD" mysql -h 127.0.0.1 -u $MYSQL_USER -D $MYSQL_DATABASE
                      -e 'SELECT 1'
                initialDelaySeconds: 5
                timeoutSeconds: 1
              resources:
                limits:
                  memory: ${MEMORY_LIMIT}
              volumeMounts:
                - mountPath: /var/lib/mysql/data
                  name: ${DATABASE_SERVICE_NAME}-data
          volumes:
            - name: ${DATABASE_SERVICE_NAME}-data
              persistentVolumeClaim:
                claimName: ${DATABASE_SERVICE_NAME}
      triggers:
        - imageChangeParams:
            automatic: true
            containerNames:
              - mariadb
            from:
              kind: ImageStreamTag
              name: mariadb:latest
              namespace: openshift
          type: ImageChange
        - type: ConfigChange
  - apiVersion: v1
    kind: Route
    metadata:
      labels:
        app: ${APP_NAME}
      name: ${APP_NAME}
    spec:
      selector:
        app: ${APP_NAME}
      port:
        targetPort: 8080-tcp
      to:
        kind: Service
        name: ${APP_NAME}
  - apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: ${APP_NAME}
      name: ${APP_NAME}
    spec:
      selector:
        app: ${APP_NAME}
        deploymentconfig: ${APP_NAME}
      ports:
        - name: 8080-tcp
          port: 8080
          protocol: TCP
          targetPort: 8080
  - apiVersion: v1
    kind: BuildConfig
    metadata:
      labels:
        app: ${APP_NAME}
      name: ${APP_NAME}
    spec:
      strategy:
        type: Source
        sourceStrategy:
          from:
            kind: ImageStreamTag
            name: wildfly:latest
            namespace: openshift
      source:
        type: Git
        git:
          uri: https://github.com/olegshishkin/ocdemo.git
      output:
        to:
          kind: ImageStreamTag
          name: ${APP_NAME}:latest
      triggers:
        - type: ConfigChange
        - imageChange:
            type: ImageChange
  - apiVersion: v1
    kind: ImageStream
    metadata:
      labels:
        app: ${APP_NAME}
      name: ${APP_NAME}
  - apiVersion: v1
    kind: DeploymentConfig
    metadata:
      labels:
        app: ${APP_NAME}
      name: ${APP_NAME}
    spec:
      replicas: 2
      selector:
        app: ${APP_NAME}
        deploymentconfig: ${APP_NAME}
      strategy:
        type: Rolling
      template:
        metadata:
          name: ${APP_NAME}
          labels:
            app: ${APP_NAME}
            deploymentconfig: ${APP_NAME}
        spec:
          containers:
            - name: ${APP_NAME}
              image: ${APP_NAME}:latest
              ports:
                - containerPort: 8080
                  protocol: TCP
              env:
                - name: DATABASE_HOST
                  valueFrom:
                    secretKeyRef:
                      name: ${DATABASE_SERVICE_NAME}
                      key: database-host
                - name: DATABASE_NAME
                  valueFrom:
                    secretKeyRef:
                      name: ${DATABASE_SERVICE_NAME}
                      key: database-name
                - name: DATABASE_USER
                  valueFrom:
                    secretKeyRef:
                      name: ${DATABASE_SERVICE_NAME}
                      key: database-user
                - name: DATABASE_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: ${DATABASE_SERVICE_NAME}
                      key: database-password
              readinessProbe:
                tcpSocket:
                  port: 8080
                initialDelaySeconds: 30
                timeoutSeconds: 10
      triggers:
        - type: ConfigChange
        - type: ImageChange
          imageChangeParams:
            automatic: true
            from:
              kind: ImageStreamTag
              name: ${APP_NAME}:latest
            containerNames:
              - ${APP_NAME}
parameters:
  - description: Maximum amount of memory the container can use.
    displayName: Memory Limit
    name: MEMORY_LIMIT
    required: true
    value: 512Mi
  - description: The OpenShift Namespace where the ImageStream resides.
    displayName: Namespace
    name: NAMESPACE
    value: oc-demo
  - description: The name of the OpenShift Service exposed for the database.
    displayName: Database Service Name
    name: DATABASE_SERVICE_NAME
    required: true
    value: mariadb
  - description: Username for MariaDB user that will be used for accessing the database.
    displayName: MariaDB Connection Username
    from: user[A-Z0-9]{3}
    generate: expression
    name: MYSQL_USER
    required: true
  - description: Password for the MariaDB connection user.
    displayName: MariaDB Connection Password
    from: '[a-zA-Z0-9]{16}'
    generate: expression
    name: MYSQL_PASSWORD
    required: true
  - description: Password for the MariaDB root user.
    displayName: MariaDB root Password
    from: '[a-zA-Z0-9]{16}'
    generate: expression
    name: MYSQL_ROOT_PASSWORD
    required: true
  - description: Name of the MariaDB database accessed.
    displayName: MariaDB Database Name
    name: MYSQL_DATABASE
    required: true
    value: sampledb
  - description: Volume space available for data, e.g. 512Mi, 2Gi.
    displayName: Volume Capacity
    name: VOLUME_CAPACITY
    required: true
    value: 1Gi
  - description: Application name
    displayName: Application name
    name: APP_NAME
    required: true
    value: ocdemo